// <auto-generated />
using System;
using JournalToDoMix.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JournalToDoMix.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241206103322_AddedTitleCategoryModels")]
    partial class AddedTitleCategoryModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JournalToDoMix.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("DurationPlanned")
                        .HasColumnType("time");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityCategoryId");

                    b.HasIndex("ActivityTitleId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            ActivityCategoryId = 1,
                            ActivityTitleId = 1,
                            Description = "",
                            DurationPlanned = new TimeSpan(0, 0, 30, 0, 0),
                            IsCompleted = true,
                            StartedAt = new DateTime(2024, 10, 18, 15, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 12,
                            ActivityCategoryId = 3,
                            ActivityTitleId = 3,
                            Description = "",
                            DurationPlanned = new TimeSpan(0, 0, 30, 0, 0),
                            IsCompleted = true,
                            StartedAt = new DateTime(2024, 10, 23, 10, 50, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 13,
                            ActivityCategoryId = 2,
                            ActivityTitleId = 4,
                            Description = "",
                            DurationPlanned = new TimeSpan(0, 1, 0, 0, 0),
                            IsCompleted = true,
                            StartedAt = new DateTime(2024, 10, 23, 10, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 14,
                            ActivityCategoryId = 4,
                            ActivityTitleId = 6,
                            Description = "",
                            DurationPlanned = new TimeSpan(0, 0, 30, 0, 0),
                            IsCompleted = true,
                            StartedAt = new DateTime(2024, 12, 3, 13, 30, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 15,
                            ActivityCategoryId = 4,
                            ActivityTitleId = 5,
                            Description = "",
                            DurationPlanned = new TimeSpan(0, 1, 0, 0, 0),
                            IsCompleted = true,
                            StartedAt = new DateTime(2024, 12, 3, 13, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 16,
                            ActivityCategoryId = 4,
                            ActivityTitleId = 5,
                            Description = "",
                            DurationPlanned = new TimeSpan(0, 1, 0, 0, 0),
                            IsCompleted = true,
                            StartedAt = new DateTime(2024, 12, 3, 13, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 17,
                            ActivityCategoryId = 5,
                            ActivityTitleId = 7,
                            Description = "",
                            DurationPlanned = new TimeSpan(0, 5, 0, 0, 0),
                            IsCompleted = true,
                            StartedAt = new DateTime(2024, 11, 5, 10, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("JournalToDoMix.Models.ActivityCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("ActivityCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Reading"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Learning"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Gaming"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Chilling"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Physical working"
                        });
                });

            modelBuilder.Entity("JournalToDoMix.Models.ActivityTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("ActivityTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Spending some time on reading a book",
                            Title = "Reading a book"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Testing some new drawing methods",
                            Title = "Learning to draw"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Playing a new pc game",
                            Title = "Playing a game"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Programming new big project",
                            Title = "Programming an app"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Watching an outside rain",
                            Title = "Chilling in a rain"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Walking around the room",
                            Title = "Chilling in a room"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Painting a garage wall",
                            Title = "Painting the wall"
                        });
                });

            modelBuilder.Entity("JournalToDoMix.Models.Activity", b =>
                {
                    b.HasOne("JournalToDoMix.Models.ActivityCategory", "ActivityCategory")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JournalToDoMix.Models.ActivityTitle", "ActivityTitle")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTitleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActivityCategory");

                    b.Navigation("ActivityTitle");
                });

            modelBuilder.Entity("JournalToDoMix.Models.ActivityCategory", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("JournalToDoMix.Models.ActivityTitle", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
